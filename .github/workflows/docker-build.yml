name: 'Build pull request'

on:
  pull_request:
    branches:
      - 'master'
  release:
    branches: [master]
    types:
      - created
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs on same branch
        uses: rokroskar/workflow-run-cleanup-action
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Load docker build cache
        uses: satackey/action-docker-layer-caching@v0.0.8
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true
        with:
          key: ${{github.repository}}-${{github.ref}}
          restore-keys: |
            ${{github.repository}}

      # Only happens on branch
      - name: Build the Docker image on branch
        if: ${{github.event_name != 'release'}}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: bash docker/build --hub-username "$DOCKER_USERNAME" --hub-token "$DOCKER_ACCESS_TOKEN"

      # Only happens on release.
      - name: Build the docker image for release
        if: ${{github.event_name == 'release'}}
        id: build-docker-image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: bash docker/build --hub-username "$DOCKER_USERNAME" --push --hub-token "$DOCKER_ACCESS_TOKEN"

      - name: Create helm release (tar the folder)
        if: ${{github.event_name == 'release'}}
        id: gzip-helm-release
        run: bash scripts/ci/create_helm_release

      - name: Get the release tag (version)
        if: ${{github.event_name == 'release'}}
        id: release_tag
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}

      - name: Upload files to release
        if: ${{github.event_name == 'release'}}
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'helm.tar.gz'
          release-tag: ${{ steps.release_tag.outputs.TAG }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}