{{ $full_name := include "zairflow-helm.fullname" . }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $full_name }}-web-svc
  namespace: {{ include "zairflow-helm.namespace" . }}
  labels:
    {{- include "zairflow-helm.labels" . | nindent 4 }}
spec:
  ports:
    - port: {{ .Values.webserver.port }}
      targetPort: {{ .Values.webserver.port }}
  clusterIP: None
  selector:
    deployment-target: {{ $full_name }}-web
---
# the webserver
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $full_name }}-web
  namespace: {{ include "zairflow-helm.namespace" . }}
  labels:
    {{- include "zairflow-helm.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.webserver.replicas }}
  selector:
    matchLabels:
      deployment-target: {{ $full_name }}-web
  template:
    metadata:
      labels:
        deployment-target: {{ $full_name }}-web
        {{- include "zairflow-helm.labels" . | nindent 8 }}
      annotations:
        {{- include "zairflow-helm.metadata_checksums" . | nindent 8 }}
    spec:
      {{- include "zairflow-helm.node_selection_and_toleration" . | nindent 6 }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ include "zairflow-helm.serviceAccountName" . }}
      {{- end}}
      terminationGracePeriodSeconds: {{ default 10 .Values.webserver.terminationGracePeriodSeconds }}
      containers:
        - name: airflow-webserver
          image: {{ include "zairflow-helm.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            tcpSocket:
              port: 8080
            timeoutSeconds: 20
            initialDelaySeconds: 60
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: 8080
            timeoutSeconds: 5
            initialDelaySeconds: 5
            periodSeconds: 5
          ports:
            - containerPort: {{ .Values.webserver.port }}
          env:
            - name: ZAIRFLOW_CONTAINER_TYPE
              value: 'webserver'
            {{- tuple .Values.webserver.envs | include "inject-yaml" | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ $full_name }}-envs
          resources:
          {{- tuple .Values.webserver.resources | include "inject-yaml" | nindent 12 }}
        {{- tuple .Values.webserver.injectContainerYaml | include "inject-yaml" | nindent 10 }}
      {{- tuple .Values.webserver.containers | include "inject-yaml" | nindent 8 }}
    {{- tuple .Values.webserver.injectTemplateSpecYaml | include "inject-yaml" | nindent 6 }}
  {{- tuple .Values.webserver.injectSpecYaml | include "inject-yaml" | nindent 4 }}
