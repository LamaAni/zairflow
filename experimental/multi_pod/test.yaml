apiVersion: v1
kind: ConfigMap
metadata:
  name: zairflow-test-config
data:
  # define airflow sync uri
  ZAIRFLOW_GIT_AUTOSYNC_URI: 'https://github.com/LamaAni/zairflow.git'
  ZAIRFLOW_DB_HOST: zairflow-test-pg-svc

  # define airflow
  AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
  AIRFLOW__CORE__LOGGING_CONFIG_CLASS: airflow_db_logger.LOGGING_CONFIG
  AIRFLOW__CORE__LOG_FORMAT: '[%(asctime)s] %(levelname)7s - %(message)s'
  AIRFLOW__CORE__COLORED_LOG_FORMAT: "[%(blue)s%(asctime)s%(reset)s] %(log_color)s%(levelname)7s%(reset)s - %(log_color)s%(message)s%(reset)s"
  AIRFLOW__CORE__EXECUTOR: KubernetesExecutor
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@zairflow-test-pg-svc:5432/airflow
  AIRFLOW__WEBSERVER__WORKERS: '2'
  
  # define kubernetes access
  AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG: local
  AIRFLOW__KUBERNETES__WORKER_CONTAINER_IMAGE_PULL_POLICY: 'Never'
  AIRFLOW__KUBERNETES__ENV_FROM_CONFIGMAP_REF: 'zairflow-test-config'

---
# The main scheduler, runs the init db command
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zairflow-test-scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zairflow-test-scheduler
  template:
    metadata:
      labels:
        app: zairflow-test-scheduler
    spec:
      containers:
        - name: main
          image: 'lamaani/zairflow:local'
          imagePullPolicy: 'Never'
          env:
            - name: ZAIRFLOW_CONTAINER_TYPE
              value: 'scheduler'
            - name: ZAIRFLOW_RUN_INITDB
              value: 'true'
          envFrom:
            - configMapRef:
                name: zairflow-test-config
          resources:
            limits:
              memory: '1.5Gi'
              cpu: '500m'
---
apiVersion: v1
kind: Service
metadata:
  name: zairflow-test-webserver-svc
  labels:
    app: zairflow-test-webserver-svc
spec:
  ports:
    - port: 8080
      targetPort: 8080
  clusterIP: None
  selector:
    app: zairflow-test-webserver
---
# the webserver
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zairflow-test-webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zairflow-test-webserver
  template:
    metadata:
      labels:
        app: zairflow-test-webserver
    spec:
      containers:
        - name: main
          image: 'lamaani/zairflow:local'
          imagePullPolicy: 'Never'
          ports:
            - containerPort: 8080
          env:
            - name: ZAIRFLOW_CONTAINER_TYPE
              value: 'webserver'
          envFrom:
            - configMapRef:
                name: zairflow-test-config
          resources:
            limits:
              memory: '1Gi'
              cpu: '500m'
---
apiVersion: v1
kind: Service
metadata:
  name: zairflow-test-pg-svc
  labels:
    app: zairflow-test-pg
spec:
  ports:
    - port: 5432
      name: postgres
  clusterIP: None
  selector:
    app: zairflow-test-pg
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zairflow-test-pg
spec:
  selector:
    matchLabels:
      app: zairflow-test-pg # has to match .spec.template.metadata.labels
  serviceName: 'zairflow-test-pg-svc'
  replicas: 1
  template:
    metadata:
      labels:
        app: zairflow-test-pg # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: airflow-postgres
          image: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: airflow
            - name: POSTGRES_DB
              value: airflow
            - name: POSTGRES_PASSWORD
              value: airflow
            - name: MAX_CONNECTIONS
              value: '100000'
          resources:
            limits:
              memory: '200Mi'
              cpu: '150m'
