#!/usr/bin/env bash
CUR_PATH="$DOCKER_BUILD_PATH"
: ${REPO_PATH:="$(dirname $(dirname $(realpath "$BASH_SOURCE[0]")))"}

source "$REPO_PATH/scripts/common.sh"

help_text="
Build the zairflow image
Usage: build
Args:
    -t | --tag      the release to to use (defaults to local). 
    --version-tag   The version tag. If dose not exist, then skipped. If exists
                    then split by '.' and add each tag. i.e. tag.0.b.3 -> tags: [tag, tag.0, tag.0.b, tag.0.b.3]
    --hub-username  The docker username to use
    --hub-token     The docker token to use
Flags:
    -h | --help     Show this help menu.
    --skip-build    Skip the build.
    --push          If true then push (default to true on master)
"

: ${DOCKER_ACCESS_TOKEN:=""}
: ${DOCKER_USERNAME:=""}
: ${DOCKER_IMAGE_TAG:="latest"}
: ${DOCKER_VERSION_TAG:=""}
: ${DO_PUSH:=0}
: ${DO_BUILD:=1}

while [ "$#" -gt 0 ]; do
    case $1 in
    --help | -h)
        echo "$help_text"
        exit 0
        ;;
    --push)
        DO_PUSH=1
        ;;
    --skip-build)
        DO_BUILD=0
        ;;
    --hub-username)
        shift
        DOCKER_USERNAME="$1"
        ;;
    --hub-token)
        shift
        DOCKER_ACCESS_TOKEN="$1"
        ;;
    --version-tag)
        shift
        DOCKER_VERSION_TAG="$1"
        ;;
    --tag | -t)
        shift
        DOCKER_IMAGE_TAG="$1"
        ;;
    *)
        echo "Error: unknown argument $1"
        exit 2
        ;;
    esac
    shift
done

# Move to build path.
cd "$REPO_PATH"
source "./envs"

####################################

function push_tag() {
    log:sep "Tagging and pushing: $1"
    docker tag "$ZAIRFLOW_IMAGE_REPOSITORY:local" "$ZAIRFLOW_IMAGE_REPOSITORY:$1"
    assert $? "Docker tag failed" || return $?
    docker push "$ZAIRFLOW_IMAGE_REPOSITORY:$1"
    assert $? "Docker push failed" || return $?
}

function build_image() {
    assert $? "Failed to load envs" || return $?

    local all_tags
    all_tags=()

    if [ -n "$DOCKER_IMAGE_TAG" ]; then
        all_tags+=("$DOCKER_IMAGE_TAG")
        version="$DOCKER_IMAGE_TAG"
    fi
    local version="local-build"
    if [ -n "$DOCKER_VERSION_TAG" ]; then
        version="$DOCKER_VERSION_TAG"
        local DOCKER_VERSION_TAG_split
        IFS='.' read -ra DOCKER_VERSION_TAG_split <<<"$DOCKER_VERSION_TAG"
        local partial_tag=""
        for part in "${DOCKER_VERSION_TAG_split[@]}"; do
            partial_tag="${partial_tag}${part}"
            all_tags+=("$partial_tag")
            partial_tag="${partial_tag}."
        done
    fi

    log:sep "Config"
    log "Path:  " "$PWD"
    log "Repo:  " "${ZAIRFLOW_IMAGE_REPOSITORY}"
    log "Tags:  " "${all_tags[@]}"

    if [ $DO_BUILD -eq 1 ]; then
        log:sep "Building $ZAIRFLOW_IMAGE_REPOSITORY @ $PWD"
        docker build -f "./docker/Dockerfile" . -t "$ZAIRFLOW_IMAGE_REPOSITORY:local" \
            --build-arg "ZAIRFLOW_VERSION=$version"
        assert $? "Docker build failed" || return $?
    fi

    if [ $DO_PUSH -eq 1 ]; then
        log:sep "Pushing $ZAIRFLOW_IMAGE_REPOSITORY -> " "${all_tags[@]}"
        for tag in "${all_tags[@]}"; do
            push_tag "$tag" || return $?
        done
    fi
}

if [ -n "$DOCKER_ACCESS_TOKEN" ]; then
    log:sep "Logging in to docker using $DOCKER_USERNAME:$DOCKER_ACCESS_TOKEN"
    docker login -u "$DOCKER_USERNAME" -p "$DOCKER_ACCESS_TOKEN"
fi

build_image
assert $? "Could not build docker image" || exit $?
