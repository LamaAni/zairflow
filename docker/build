#!/usr/bin/env bash
CUR_PATH="$DOCKER_BUILD_PATH"
: ${REPO_PATH:="$(dirname $(dirname $(realpath "$BASH_SOURCE[0]")))"}

source "$REPO_PATH/scripts/common.sh"

help_text="
Build the zairflow image
Usage: build
Args:
    --main-tag      The main tag to use (defaults to latest)
    --push          If true then push (default to true on master)
    --hub-username  The docker username to use
    --hub-token     The docker token to use
    
Flags:
    -h | --help     Show this help menu.
    --pull-cache    Pull the cached images for latest and the main-tag (if any)
"

HUB_TOKEN=""
HUB_USERNAME=""
DO_PUSH=0
MAIN_TAG="latest"
PULL_CACHE=0

while [ "$#" -gt 0 ]; do
    case $1 in
    --help | -h)
        echo "$help_text"
        exit 0
        ;;
    --push)
        DO_PUSH=1
        ;;
    --hub-username)
        shift
        HUB_USERNAME="$1"
        ;;
    --hub-token)
        shift
        HUB_TOKEN="$1"
        ;;
    --pull-cache)
        PULL_CACHE=1
        ;;
    --main-tag)
        shift
        MAIN_TAG="$1"
        ;;
    *)
        echo "Error: unknown argument $1"
        exit 2
        ;;
    esac
    shift
done

# Move to build path.
cd "$REPO_PATH"
source "./envs"

####################################

function pull_cache() {
    log:sep "Pulling cache from repository..."
    log "Pulling current tag ($MAIN_TAG)..."
    HAS_ERROR=0
    docker pull "$ZAIRFLOW_IMAGE_REPOSITORY:$MAIN_TAG"
    assert_warning $? "Failed to pull current branch, attempting latest" || HAS_ERROR=1
    if [ $HAS_ERROR -eq 1 ]; then
        log "Pulling latest..."
        docker pull "$ZAIRFLOW_IMAGE_REPOSITORY:latest"
        assert_warning $? "Failed to pull latest. Image will be rebuilt."
    fi
}

function push_tag() {
    log:sep "Tagging and pushing: $1"
    docker tag "$ZAIRFLOW_IMAGE_REPOSITORY:local" "$ZAIRFLOW_IMAGE_REPOSITORY:$1"
    assert $? "Docker tag failed" || return $?
    docker push "$ZAIRFLOW_IMAGE_REPOSITORY:$1"
    assert $? "Docker push failed" || return $?
}

function build_image() {
    assert $? "Failed to load envs" || return $?

    log:sep "Building zairflow $ZAIRFLOW_FULL_VERSION @ $PWD # $ZAIRFLOW_IMAGE_REPOSITORY:local"
    docker build -f "./docker/Dockerfile" . -t "$ZAIRFLOW_IMAGE_REPOSITORY:local" \
        --build-arg "ZAIRFLOW_VERSION=$ZAIRFLOW_FULL_VERSION"

    assert $? "Docker build failed" || return $?

    if [ $DO_PUSH -eq 1 ]; then
        push_tag "$ZAIRFLOW_VERSION" || return $?
        push_tag "$ZAIRFLOW_FULL_VERSION" || return $?
        push_tag "$MAIN_TAG" || return $?
    fi
}

if [ $PULL_CACHE -eq 1 ]; then
    pull_cache || exit $?
fi
if [ -n "$HUB_TOKEN" ]; then
    log:sep "Logging in to docker using $HUB_USERNAME:$HUB_TOKEN"
    docker login -u "$HUB_USERNAME" -p "$HUB_TOKEN"
fi

build_image
assert $? "Could not build docker image" || exit $?
